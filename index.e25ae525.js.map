{"mappings":"AAAO,SAASA,IAOd,MAFc,OAJFC,KAAKC,MAAsB,IAAhBD,KAAKE,cACdF,KAAKC,MAAsB,IAAhBD,KAAKE,cACjBF,KAAKC,MAAsB,IAAhBD,KAAKE,Y,CAO/B,MAAMC,EAAcJ,IACpBK,QAAQC,IAAIF,GCTLG,eAAeC,IACpB,IACE,MAAMC,QAAiBC,MAJJ,yBAKnB,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,oBAAoBH,EAASI,cAE/C,MAAMC,QAAyBL,EAASM,OAExC,OADAV,QAAQC,IAAIQ,GACLA,C,CACP,MAAOE,GACPX,QAAQW,MAAM,UAAUA,I,ECT5B,MAAMC,EAAaC,SAASC,cAAc,iBAEnCZ,iBACL,IACE,MAEMa,SAFmBZ,KAGtBa,KAAI,CAACC,EAAMC,IACH,wCAAwCD,EAAKE,oBAClDF,EAAKG,+BACkBzB,iCAA8CuB,iBAExEG,KAAK,IACRT,EAAWU,mBAAmB,YAAaP,GAC3Cf,QAAQC,IAAIW,E,CACZ,MAAOD,GACPX,QAAQW,MAAM,UAAUA,I,EAI5BY","sources":["src/js/randomColor.js","src/js/getRectangles.js","src/js/createBlocksMarkup.js"],"sourcesContent":["export function getRandomColor() {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n\n  const color = `rgb(${red}, ${green}, ${blue})`;\n\n  return color;\n}\n\nconst randomColor = getRandomColor();\nconsole.log(randomColor);\n","const jsonBlocksPath = '/src/data/blocks.json';\n\nexport async function getRectangles() {\n  try {\n    const response = await fetch(jsonBlocksPath);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch: ${response.statusText}`);\n    }\n    const placedRectangles = await response.json();\n    console.log(placedRectangles);\n    return placedRectangles;\n  } catch (error) {\n    console.error(`Error: ${error}`);\n  }\n}\n","import { getRectangles } from './getRectangles.js';\nimport { getRandomColor } from './randomColor.js';\n\nconst blocksList = document.querySelector('.blocks-list');\n\nexport async function createBlocksMarkup() {\n  try {\n    const rectangles = await getRectangles();\n\n    const markup = rectangles\n      .map((rect, index) => {\n        return `<li class=\"block-item\" style=\"width: ${rect.width}px; height: ${\n          rect.height\n        }px; background-color: ${getRandomColor()}\"><div class=\"block-index\">${index}</div></li>`;\n      })\n      .join('');\n    blocksList.insertAdjacentHTML('beforeend', markup);\n    console.log(blocksList);\n  } catch (error) {\n    console.error(`Error: ${error}`);\n  }\n}\n\ncreateBlocksMarkup();\n"],"names":["$e9dfc67c73b1fdc1$export$e4369cabd7e84cd9","Math","floor","random","$e9dfc67c73b1fdc1$var$randomColor","console","log","async","$e5a2041a65d19ca3$export$4ce8b444ce172029","response","fetch","ok","Error","statusText","placedRectangles","json","error","$b011a5d62c104f0b$var$blocksList","document","querySelector","markup","map","rect","index","width","height","join","insertAdjacentHTML","$b011a5d62c104f0b$export$32042fdf1ed9d584"],"version":3,"file":"index.e25ae525.js.map"}