{"mappings":"AA4HAA,QAAQC,IAAI","sources":["src/js/index.js"],"sourcesContent":["// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n// import Notiflix from 'notiflix';\n// import { fetchImages, per_page } from './img-api';\n\n// const formEl = document.querySelector('.search-form');\n// const divEl = document.querySelector('.gallery');\n// const loadMoreBtn = document.querySelector('.load-more');\n// const inputEl = document.querySelector('[name=searchQuery]');\n// const searchBtn = document.querySelector('.search-btn');\n\n// formEl.addEventListener('submit', onSubmitBtn);\n// loadMoreBtn.addEventListener('click', onLoadMoreData);\n\n// let page = 1;\n// let searchQuery = '';\n// let submitClick = false;\n\n// let gallery = new SimpleLightbox('.gallery a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// const renderPage = async () => {\n//   try {\n//     const images = await fetchImages(searchQuery, page);\n\n//     if (images.hits.length === 0) {\n//       inputEl.disabled = false;\n//       searchBtn.disabled = false;\n//       return Notiflix.Notify.warning(\n//         'Sorry, there are no images matching your search query. Please try again.'\n//       );\n//     }\n\n//     if (submitClick) {\n//       Notiflix.Notify.success(`Hooray! We found ${images.totalHits} images.`);\n//     }\n\n//     createMarkup(images.hits);\n\n//     gallery.refresh();\n//     const { height: cardHeight } = document\n//       .querySelector('.gallery')\n//       .firstElementChild.getBoundingClientRect();\n\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n\n//     loadMoreBtn.classList.remove('is-hidden');\n\n//     const lastPage = Math.ceil(images.totalHits / per_page);\n\n//     if (page === lastPage) {\n//       loadMoreBtn.classList.add('is-hidden');\n//       Notiflix.Notify.info(\n//         'We are sorry, but you have reached the end of search results.'\n//       );\n//     }\n//   } catch (error) {\n//     Notiflix.Notify.failure('Oops, someting went wrong!');\n//   }\n//   inputEl.disabled = false;\n//   searchBtn.disabled = false;\n// };\n\n// function createMarkup(images) {\n//   const markup = images\n//     .map(image => {\n//       return `<a href=\"${image.largeImageURL}\" class=\"photo-card\">\n//     <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" width=250 height=200 />\n//     <div class=\"info\">\n//     <p class=\"info-item\">\n//       <b>👍 Likes: ${image.likes}</b>\n//       </p>\n//       <p class=\"info-item\">\n//       <b>👀 Views: ${image.views}</b>\n//       </p>\n//       <p class=\"info-item\">\n//       <b>💬 Comments: ${image.comments}</b>\n//     </p>\n//     <p class=\"info-item\">\n//     <b>⬇️ Downloads: ${image.downloads}</b>\n//     </p>\n//     </div>\n//     </a>`;\n//     })\n//     .join('');\n//   divEl.insertAdjacentHTML('beforeend', markup);\n// }\n\n// async function onSubmitBtn(event) {\n//   event.preventDefault();\n\n//   submitClick = true;\n\n//   if (inputEl.value.trim() === '') {\n//     Notiflix.Notify.warning('Please, fill the form! Form should not be empty!');\n//     return;\n//   }\n\n//   inputEl.disabled = true;\n//   searchBtn.disabled = true;\n\n//   loadMoreBtn.classList.add('is-hidden');\n\n//   page = 1;\n//   searchQuery = event.target.elements.searchQuery.value.trim();\n//   divEl.innerHTML = '';\n\n//   renderPage();\n// }\n\n// function onLoadMoreData() {\n//   page += 1;\n//   loadMoreBtn.classList.add('is-hidden');\n\n//   submitClick = false;\n\n//   renderPage();\n// }\n\nconsole.log('hello');\n"],"names":["console","log"],"version":3,"file":"index.24d046fc.js.map"}